name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Build release artifacts
      run: ./gradlew build publishToMavenLocal
      
    - name: Get version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "TAG_NAME=v${{ github.event.inputs.version }}" >> $GITHUB_ENV
        else
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV  
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        # 간단한 changelog 생성 (이전 태그부터 현재까지의 커밋)
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%an)" --no-merges)
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" --no-merges)
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.TAG_NAME }}
        name: "Release ${{ env.VERSION }}"
        body: |
          ## 🚀 Release ${{ env.VERSION }}
          
          ### 📋 Changes
          ${{ env.CHANGELOG }}
          
          ### 📦 Installation
          
          **Gradle (Kotlin DSL)**
          ```kotlin
          dependencies {
              implementation("com.github.nohsw:cidr-validator:${{ env.VERSION }}")
          }
          ```
          
          **Maven**
          ```xml
          <dependency>
              <groupId>com.github.nohsw</groupId>
              <artifactId>cidr-validator</artifactId>
              <version>${{ env.VERSION }}</version>
          </dependency>
          ```
          
        artifacts: |
          build/libs/*.jar
        draft: false
        prerelease: false
        
    - name: Trigger JitPack build
      run: |
        curl -s "https://jitpack.io/com/github/nohsw/cidr-validator/${{ env.VERSION }}/build.log" || true 